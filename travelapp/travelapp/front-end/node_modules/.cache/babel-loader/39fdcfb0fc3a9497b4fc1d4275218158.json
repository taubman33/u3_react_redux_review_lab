{"ast":null,"code":"import { GetDestinations, GetDestination, LikeDestination, CreateReview } from \"../../services/DestinationService\";\nimport { GET_DESTINATIONS, GET_DESTINATION_BY_ID, LIKE_DESTINATION, ADD_REVIEW } from \"../types\";\nexport const LoadDestinations = () => {\n  return async dispatch => {\n    try {\n      const destinations = await GetDestinations();\n      dispatch({\n        type: GET_DESTINATIONS,\n        payload: destinations\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n_c = LoadDestinations;\nexport const GetDestinationById = id => {\n  return async dispatch => {\n    try {\n      const destination = await GetDestination(id);\n      dispatch({\n        type: GET_DESTINATION_BY_ID,\n        payload: destination\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n_c2 = GetDestinationById;\nexport const LikeDestinationById = id => {\n  return async dispatch => {\n    try {\n      const like = await LikeDestination(id);\n      dispatch({\n        type: LIKE_DESTINATION,\n        payload: like\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n_c3 = LikeDestinationById;\nexport const AddReview = (id, review) => {\n  return async dispatch => {\n    try {\n      const newReview = await CreateReview(id, review);\n      console.log(\"NEW REVIEW: \", newReview);\n      dispatch({\n        type: ADD_REVIEW,\n        payload: newReview\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n_c4 = AddReview;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LoadDestinations\");\n$RefreshReg$(_c2, \"GetDestinationById\");\n$RefreshReg$(_c3, \"LikeDestinationById\");\n$RefreshReg$(_c4, \"AddReview\");","map":{"version":3,"sources":["C:/Users/annik/Desktop/travelapp/travelapp/front-end/src/store/actions/DestinationActions.js"],"names":["GetDestinations","GetDestination","LikeDestination","CreateReview","GET_DESTINATIONS","GET_DESTINATION_BY_ID","LIKE_DESTINATION","ADD_REVIEW","LoadDestinations","dispatch","destinations","type","payload","error","GetDestinationById","id","destination","LikeDestinationById","like","AddReview","review","newReview","console","log"],"mappings":"AAAA,SACEA,eADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,YAJF,QAKO,mCALP;AAOA,SACEC,gBADF,EAEEC,qBAFF,EAGEC,gBAHF,EAIEC,UAJF,QAKO,UALP;AAOA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,YAAY,GAAG,MAAMV,eAAe,EAA1C;AAEAS,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEP,gBADC;AAEPQ,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAOG,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;AACF,GAXD;AAYD,CAbM;KAAML,gB;AAeb,OAAO,MAAMM,kBAAkB,GAAIC,EAAD,IAAQ;AACxC,SAAO,MAAON,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMO,WAAW,GAAG,MAAMf,cAAc,CAACc,EAAD,CAAxC;AAEAN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEN,qBADC;AAEPO,QAAAA,OAAO,EAAEI;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAOH,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;AACF,GAXD;AAYD,CAbM;MAAMC,kB;AAeb,OAAO,MAAMG,mBAAmB,GAAIF,EAAD,IAAQ;AACzC,SAAO,MAAON,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMS,IAAI,GAAG,MAAMhB,eAAe,CAACa,EAAD,CAAlC;AAEAN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEL,gBADC;AAEPM,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAOL,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;AACF,GAXD;AAYD,CAbM;MAAMI,mB;AAeb,OAAO,MAAME,SAAS,GAAG,CAACJ,EAAD,EAAKK,MAAL,KAAgB;AACvC,SAAO,MAAOX,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMY,SAAS,GAAG,MAAMlB,YAAY,CAACY,EAAD,EAAKK,MAAL,CAApC;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,SAA5B;AAEAZ,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEJ,UADC;AAEPK,QAAAA,OAAO,EAAES;AAFF,OAAD,CAAR;AAID,KATD,CASE,OAAOR,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;AACF,GAbD;AAcD,CAfM;MAAMM,S","sourcesContent":["import {\n  GetDestinations,\n  GetDestination,\n  LikeDestination,\n  CreateReview,\n} from \"../../services/DestinationService\";\n\nimport {\n  GET_DESTINATIONS,\n  GET_DESTINATION_BY_ID,\n  LIKE_DESTINATION,\n  ADD_REVIEW,\n} from \"../types\";\n\nexport const LoadDestinations = () => {\n  return async (dispatch) => {\n    try {\n      const destinations = await GetDestinations();\n\n      dispatch({\n        type: GET_DESTINATIONS,\n        payload: destinations,\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const GetDestinationById = (id) => {\n  return async (dispatch) => {\n    try {\n      const destination = await GetDestination(id);\n\n      dispatch({\n        type: GET_DESTINATION_BY_ID,\n        payload: destination,\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const LikeDestinationById = (id) => {\n  return async (dispatch) => {\n    try {\n      const like = await LikeDestination(id);\n\n      dispatch({\n        type: LIKE_DESTINATION,\n        payload: like,\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const AddReview = (id, review) => {\n  return async (dispatch) => {\n    try {\n      const newReview = await CreateReview(id, review);\n\n      console.log(\"NEW REVIEW: \", newReview);\n\n      dispatch({\n        type: ADD_REVIEW,\n        payload: newReview,\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}