{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annik\\\\Desktop\\\\travelapp\\\\travelapp\\\\front-end\\\\src\\\\routes\\\\Destination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ReviewForm from \"../components/ReviewForm\";\nimport { GetDestinationById, LikeDestinationById, AddReview } from \"../store/actions/DestinationActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = _ref => {\n  let {\n    destinationState\n  } = _ref;\n  return {\n    destinationState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDestination: id => dispatch(GetDestinationById(id)),\n    addLike: id => dispatch(LikeDestinationById(id)),\n    addReview: (id, newReview) => dispatch(AddReview(id, newReview))\n  };\n};\n\nconst Destination = props => {\n  _s();\n\n  console.log(props);\n  const {\n    destination\n  } = props.destinationState;\n  const {\n    id\n  } = useParams();\n  useEffect(async () => {\n    props.fetchDestination(id);\n  }, []);\n\n  if (!destination._id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: destination.img,\n      className: \"destination-image-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: destination.location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: destination.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"likes\",\n      children: [destination.likes, \" likes\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.addLike(id),\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n        addReview: props.addReview,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reviews:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), destination.reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [review.name, \": \", review.comment]\n      }, review._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Destination, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Destination;\nexport default connect(mapStateToProps, mapDispatchToProps)(Destination);\n\nvar _c;\n\n$RefreshReg$(_c, \"Destination\");","map":{"version":3,"sources":["C:/Users/annik/Desktop/travelapp/travelapp/front-end/src/routes/Destination.js"],"names":["React","useEffect","useParams","connect","ReviewForm","GetDestinationById","LikeDestinationById","AddReview","mapStateToProps","destinationState","mapDispatchToProps","dispatch","fetchDestination","id","addLike","addReview","newReview","Destination","props","console","log","destination","_id","img","location","desc","likes","reviews","map","review","name","comment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,SAHF,QAIO,qCAJP;;;AAMA,MAAMC,eAAe,GAAG,QAA0B;AAAA,MAAzB;AAAEC,IAAAA;AAAF,GAAyB;AAChD,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,gBAAgB,EAAGC,EAAD,IAAQF,QAAQ,CAACN,kBAAkB,CAACQ,EAAD,CAAnB,CAD7B;AAELC,IAAAA,OAAO,EAAGD,EAAD,IAAQF,QAAQ,CAACL,mBAAmB,CAACO,EAAD,CAApB,CAFpB;AAGLE,IAAAA,SAAS,EAAE,CAACF,EAAD,EAAKG,SAAL,KAAmBL,QAAQ,CAACJ,SAAS,CAACM,EAAD,EAAKG,SAAL,CAAV;AAHjC,GAAP;AAKD,CAND;;AAQA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAkBH,KAAK,CAACT,gBAA9B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAASX,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpBiB,IAAAA,KAAK,CAACN,gBAAN,CAAuBC,EAAvB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAACQ,WAAW,CAACC,GAAjB,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAED,WAAW,CAACE,GAAtB;AAA2B,MAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAAKF,WAAW,CAACG;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA,gBAAIH,WAAW,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACGJ,WAAW,CAACK,KADf,yBAEE;AAAQ,QAAA,OAAO,EAAE,MAAMR,KAAK,CAACJ,OAAN,CAAcD,EAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEK,KAAK,CAACH,SAA7B;AAAwC,QAAA,EAAE,EAAEF;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAiBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGQ,WAAW,CAACM,OAAZ,CAAoBC,GAApB,CAAyBC,MAAD,iBACvB;AAAA,mBACGA,MAAM,CAACC,IADV,QACkBD,MAAM,CAACE,OADzB;AAAA,SAAUF,MAAM,CAACP,GAAjB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAzCD;;GAAML,W;UAGWf,S;;;KAHXe,W;AA2CN,eAAed,OAAO,CAACK,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CO,WAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport ReviewForm from \"../components/ReviewForm\";\nimport {\n  GetDestinationById,\n  LikeDestinationById,\n  AddReview,\n} from \"../store/actions/DestinationActions\";\n\nconst mapStateToProps = ({ destinationState }) => {\n  return { destinationState };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchDestination: (id) => dispatch(GetDestinationById(id)),\n    addLike: (id) => dispatch(LikeDestinationById(id)),\n    addReview: (id, newReview) => dispatch(AddReview(id, newReview)),\n  };\n};\n\nconst Destination = (props) => {\n  console.log(props);\n  const { destination } = props.destinationState;\n  const { id } = useParams();\n\n  useEffect(async () => {\n    props.fetchDestination(id);\n  }, []);\n\n  if (!destination._id) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <img src={destination.img} className=\"destination-image-full\" />\n\n      <h1>{destination.location}</h1>\n\n      <p>{destination.desc}</p>\n\n      <div className=\"likes\">\n        {destination.likes} likes\n        <button onClick={() => props.addLike(id)}>Like</button>\n      </div>\n\n      <div>\n        <h2>Add a Review</h2>\n        <ReviewForm addReview={props.addReview} id={id} />\n      </div>\n\n      <div>\n        <h2>Reviews:</h2>\n        {destination.reviews.map((review) => (\n          <div key={review._id}>\n            {review.name}: {review.comment}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Destination);\n"]},"metadata":{},"sourceType":"module"}